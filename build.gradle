plugins {
	id 'maven-publish'
	id 'org.jetbrains.kotlin.multiplatform' version '1.5.30'
	id 'org.jetbrains.kotlin.plugin.serialization' version '1.5.30'
}

group = 'net.tassia'
version = '1.0.0-PRE.1'

repositories {
	mavenCentral()
}

kotlin {

	jvm {
		compilations.all {
			kotlinOptions.jvmTarget = '1.8'
		}
		testRuns["test"].executionTask.configure {
			useJUnit()
		}
	}

	js(IR) {
		browser {
		}
	}

	def hostOs = System.getProperty("os.name")
	def isMingwX64 = hostOs.startsWith("Windows")
	if (hostOs == "Mac OS X") macosX64('native')
	else if (hostOs == "Linux") linuxX64("native")
	else if (isMingwX64) mingwX64("native")
	else throw new GradleException("Host OS is not supported in Kotlin/Native.")

	sourceSets {
		commonMain {
			dependencies {
				implementation 'io.ktor:ktor-client-core:1.6.3'
				implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2'
				implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.2.2'
			}
		}
		commonTest {
			dependencies {
				implementation kotlin('test')
				// implementation 'io.ktor:ktor-client-mock:1.6.3'
				// implementation 'io.ktor:ktor-client-cio:1.6.3'
			}
		}
	}

}

publishing {
	repositories {
		maven {
			url = uri('https://nexus.tassia.net/repository/maven-tassia/')
			credentials {
				username = findProperty("PUBLISH_MAVEN_USERNAME") ?: "N/A"
				password = findProperty("PUBLISH_MAVEN_PASSWORD") ?: "N/A"
			}
		}
	}
}
